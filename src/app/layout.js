'use client';
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/global/Navbar";
import { ThemeProvider } from "@/components/theme-provider";
import Footer from "@/components/global/Footer";
import { ClerkProvider } from "@clerk/nextjs";
import { SaveUserToDB } from "@/lib/saveUserToDB";
import Providers from "@/providers/Providers";
import { Toaster } from "sonner";
import { usePathname } from "next/navigation";
import { OfflineUserToDB } from "@/lib/offlineUserToDB";
import { LoginUserToDB } from "@/lib/loginUserToDB";
import { useEffect, useState } from "react";

// export const metadata = {
//   title: "XyNexa",
//   description: "Generated by Debug Titans Team",
// };

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({ children }) {
  const pathname = usePathname();
  const [isDashboard, setIsDashboard] = useState(false);
  const [isAdminDashboard, setIsAdminDashboard] = useState(false);
  const [isSignIn, setIsSignIn] = useState(false);
  const [isSignUp, setIsSignUp] = useState(false);
  const [shouldShowNavbarFooter, setShouldShowNavbarFooter] = useState(true);

  useEffect(() => {
    setIsDashboard(pathname.startsWith("/dashboard"));
    setIsAdminDashboard(pathname.startsWith("/admin-dashbaord")); // Corrected path
    setIsSignIn(pathname.startsWith("/sign-in"));
    setIsSignUp(pathname.startsWith("/sign-up"));
  }, [pathname]);

  useEffect(() => {
    setShouldShowNavbarFooter(!(isDashboard || isAdminDashboard || isSignIn || isSignUp));
  }, [isDashboard, isAdminDashboard, isSignIn, isSignUp]);

  return (
    <ClerkProvider
      appearance={{
        layout: {
          unsafe_disableDevelopmentModeWarnings: true,
        },
      }}
    >
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <Providers>
            <ThemeProvider
              attribute="class"
              defaultTheme="system"
              enableSystem
              disableTransitionOnChange
            >
              {shouldShowNavbarFooter && <Navbar />}
              <main className="min-h-screen">
                <SaveUserToDB />
                <OfflineUserToDB />
                <LoginUserToDB />

                <Toaster position="top-right" />

                {children}
              </main>
              {shouldShowNavbarFooter && <Footer />}
            </ThemeProvider>
          </Providers>
        </body>
      </html>
    </ClerkProvider>
  );
}